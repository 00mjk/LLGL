/*
 * Query.h
 * 
 * This file is part of the "LLGL" project (Copyright (c) 2015 by Lukas Hermanns)
 * See "LICENSE.txt" for license information.
 */

#ifndef __LLGL_QUERY_H__
#define __LLGL_QUERY_H__


#include "Export.h"


namespace LLGL
{


//! Query type enumeration.
enum class QueryType
{
    SamplesPassed,                      //!< Number of samples that passed the depth test.
    AnySamplesPassed,                   //!< Non-zero if any samples passed the depth test.
    AnySamplesPassedConservative,       //!< Non-zero if any samples passed the depth test within a conservative rasterization.
    PrimitivesGenerated,                //!< Number of generated primitives which are send to the rasterizer (either emitted from the geometry or vertex shader).
    TimeElapsed,                        //!< Elapsed time (in nanoseconds) between the begin- and end query command.
    StreamOutPrimitivesWritten,         //!< Number of vertices that have been written into a stream output (also called "Transform Feedback").
    StreamOutOverflow,                  //!< Non-zero if any of the streaming output buffers (also called "Transform Feedback Buffers") has an overflow.
    VerticesSubmitted,                  //!< Number of vertices submitted to the input-assembly.
    PrimitivesSubmitted,                //!< Number of primitives submitted to the input-assembly.
    VertexShaderInvocations,            //!< Number of vertex shader invocations.
    TessControlShaderInvocations,       //!< Number of tessellation-control shader invocations.
    TessEvaluationShaderInvocations,    //!< Number of tessellation-evaluation shader invocations.
    GeometryShaderInvocations,          //!< Number of geometry shader invocations.
    FragmentShaderInvocations,          //!< Number of fragment shader invocations.
    ComputeShaderInvocations,           //!< Number of compute shader invocations.
    GeometryPrimitivesGenerated,        //!< Number of primitives generated by the geometry shader.
    ClippingInputPrimitives,            //!< Number of primitives that reached the primitive clipping stage.
    ClippingOutputPrimitives,           //!< Number of primitives that passed the primitive clipping stage.
};


//! Query interface.
class LLGL_EXPORT Query
{

    public:

        Query(const Query&) = delete;
        Query& operator = (const Query&) = delete;

        virtual ~Query()
        {
        }

        //! Returns the type of the query.
        inline QueryType GetType() const
        {
            return type_;
        }

    protected:

        Query(QueryType type) :
            type_( type )
        {
        }

    private:

        QueryType type_ = QueryType::SamplesPassed;

};


} // /namespace LLGL


#endif



// ================================================================================
